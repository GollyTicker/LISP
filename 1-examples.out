-- parsing
(a b c)
(a)
(a (b c))
(a (b c))
((b c) a)
((b c) a)

-- quote
(a b c)
sdf
(a b c)

-- atoms and lists
a
sdfsr
((quote d) (quote a) 1)
213
(23 dfs 34)
9
()
t
2

-- atom
t
t
()

-- eq
t
()
()
t
()
t
()

-- car
a
a
(a b)

-- cdr
()
(b c)
((d e) f)

-- cons
(a b c)
(a)
((a b) d e)

-- cond
a
a
c
b
a
a
(a b c)

-- list
()
(a)
(a b)

-- lambda
a
(1 c d)
(1 c d)
(1 b c)
(1 a c)
a
3
a
a
(a a)
(f f x)
(f f arg1 arg2)
(1 2 3 4)
3
6
--
--
--

-- define!
test-value
(lambda (f x) (f f x))

-- define
(b 1)

-- standard library
()
t
#ignore-embed-eval-following#
a
b
t
()
0
1
2
a
(a b)
(a b c d)
(c d)
()
(a b)
()
(a)
(a b)
((1 a) b c)
()
()
((a 1))
((a 1) (b 2))
1
2
#
(0 1 2)
t
()
()
t
(a b c)
()
()
t
()
b
c
(0 (0 1) (0 1))
(quote (0 a a))
(lambda (0 a b) (list 0 a b))
(lambda (0 a b) (d 0 a b))

-- label

-- eval
(error undefined-atom a)
1
(error empty-list-eval)
a
t
()
t
()
a
(b)
a
a

-- lisp self-interpreter
